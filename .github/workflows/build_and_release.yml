name: CI_build_and_release

env:
  PROJECT_NAME: i3-bindings

on: [push]

jobs:
  build_and_release:
    name: Build
    runs-on: ${{ matrix.job.os }}
    strategy:
      fail-fast: false
      matrix:
        job:
          # { os, target, cargo-options, features, use-cross, toolchain }
          - { os: ubuntu-latest  , target: arm-unknown-linux-gnueabihf , use-cross: use-cross }
          - { os: ubuntu-18.04   , target: aarch64-unknown-linux-gnu   , use-cross: use-cross }
          - { os: ubuntu-18.04   , target: i586-unknown-linux-gnu      , use-cross: use-cross }
          - { os: ubuntu-18.04   , target: i686-unknown-linux-gnu      , use-cross: use-cross }
          - { os: ubuntu-18.04   , target: x86_64-unknown-linux-gnu    , use-cross: use-cross }
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Initialize workflow variables
        id: vars
        shell: bash
        run: |
          EXE_suffix="" ; case ${{ matrix.job.target }} in *-pc-windows-*) EXE_suffix=".exe" ;; esac;
          echo set-output name=EXE_suffix::${EXE_suffix}
          echo ::set-output name=EXE_suffix::${EXE_suffix}
      - name: rust toolchain ~ install
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          target: ${{ matrix.job.target }}
          override: true
          profile: minimal # minimal component installation (ie, no documentation)
      - name: Build
        uses: actions-rs/cargo@v1
        with:
          use-cross: true
          command: build
          args: --release --all-features --target=${{ matrix.job.target }} ${{ matrix.job.cargo-options }}
#      - name: Archive executable artifacts
#        uses: actions/upload-artifact@master
#        with:
#          name: ${{ env.PROJECT_NAME }}-${{ matrix.job.target }}
#          path: target/${{ matrix.job.target }}/release/${{ env.PROJECT_NAME }}${{ steps.vars.outputs.EXE_suffix }}
      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: target/${{ matrix.job.target }}/release/${{ env.PROJECT_NAME }}${{ steps.vars.outputs.EXE_suffix }}
        env:
          GITHUB_TOKEN: ${{ secrets.DEP_GITHUB_TOKEN }}
